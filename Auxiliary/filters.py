from aiogram.filters import Filter
from aiogram import types
from Logging.LoggerConfig import logger
from aiogram.fsm.context import FSMContext

class Admin_filt(Filter):
    def __init__(self, chat_id: int):
        self.chat_id = chat_id

    async def __call__(self, message: types.Message, state: FSMContext):
        if message.chat.id == self.chat_id:
            return True
        else:
            current_state = await state.get_state()
            if current_state == None:
                logger.error(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.username} –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–∞–Ω–¥–æ–π {message.text} –Ω–µ –±—É–¥—É—á–∏ –∞–¥–º–∏–Ω–æ–º!')
                await message.answer('–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª—Å—è –∫–æ–º–∞–Ω–¥–æ–π, –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ—Ç–æ—Ä–æ–π —Ç–µ–±–µ –Ω–µ –ø–æ–∑–≤–æ–ª–µ–Ω–æ üòë\n\n<b>–ê–¥–º–∏–Ω —É–∂–µ –∑–Ω–∞–µ—Ç –æ–± —ç—Ç–æ–º –∏ —Å–∫–æ—Ä–æ —Ç–µ–±—è –Ω–∞–π–¥–µ—Ç üëø</b>')
                await state.clear()
                return False
            else:
                return False

# 